[
  {
    "id": "q1",
    "questionNumber": 1,
    "text": "Every employee of your company has a Google account. Your operational team needs to manage a large number of instances on Compute Engine. Each member of this team needs only administrative access to the servers. Your security team wants to ensure that the deployment of credentials is operationally efficient and must be able to determine who accessed a given instance. What should you do?",
    "options": [
      {
        "id": "A",
        "text": "Generate a new SSH key pair. Give the private key to each member of your team. Configure the public key in the metadata of each instance.",
        "isCorrect": false
      },
      {
        "id": "B", 
        "text": "Ask each member of the team to generate a new SSH key pair and to send you their public key. Use a configuration management tool to deploy those keys on each instance.",
        "isCorrect": false
      },
      {
        "id": "C",
        "text": "Ask each member of the team to generate a new SSH key pair and to add the public key to their Google account. Grant the compute.osAdminLogin role to the Google group corresponding to this team.",
        "isCorrect": true
      },
      {
        "id": "D",
        "text": "Generate a new SSH key pair. Give the private key to each member of your team. Configure the public key as a project-wide public SSH key in your Cloud Platform project and allow project-wide public SSH keys on each instance.",
        "isCorrect": false
      }
    ],
    "correctAnswer": "C",
    "explanation": "Using OS Login with Google accounts provides the best security and auditability. Each team member uses their own SSH key associated with their Google account, and the compute.osAdminLogin role grants administrative access while maintaining individual accountability.",
    "category": "Identity and Access Management",
    "difficulty": "medium",
    "tags": ["SSH", "OS Login", "IAM", "Security"],
    "source": "part1"
  },
  {
    "id": "q2", 
    "questionNumber": 2,
    "text": "You need to create a custom VPC with multiple subnets. The VPC will host a multi-tier web application with web servers, application servers, and database servers. You want to ensure proper network isolation between tiers while allowing necessary communication. What should you do?",
    "options": [
      {
        "id": "A",
        "text": "Create a single subnet and use firewall rules to control traffic between tiers.",
        "isCorrect": false
      },
      {
        "id": "B",
        "text": "Create separate subnets for each tier and configure firewall rules to allow only necessary traffic between subnets.",
        "isCorrect": true
      },
      {
        "id": "C", 
        "text": "Use the default VPC with default firewall rules.",
        "isCorrect": false
      },
      {
        "id": "D",
        "text": "Create separate VPCs for each tier and use VPC peering to connect them.",
        "isCorrect": false
      }
    ],
    "correctAnswer": "B",
    "explanation": "Creating separate subnets for each tier provides network isolation while firewall rules control the specific traffic that can flow between tiers. This follows the principle of least privilege and defense in depth.",
    "category": "Networking",
    "difficulty": "medium", 
    "tags": ["VPC", "Subnets", "Firewall", "Network Security"],
    "source": "part1"
  },
  {
    "id": "q3",
    "questionNumber": 3,
    "text": "Your company is migrating a legacy application to Google Cloud. The application requires a specific version of a database that is not available as a managed service. You need to ensure high availability and automated backups. What should you do?",
    "options": [
      {
        "id": "A",
        "text": "Deploy the database on a single Compute Engine instance with persistent disks.",
        "isCorrect": false
      },
      {
        "id": "B",
        "text": "Use Cloud SQL with a custom database engine.",
        "isCorrect": false
      },
      {
        "id": "C",
        "text": "Deploy the database on Compute Engine instances in multiple zones with automated backup scripts.",
        "isCorrect": true
      },
      {
        "id": "D",
        "text": "Use Kubernetes Engine to deploy the database with persistent volumes.",
        "isCorrect": false
      }
    ],
    "correctAnswer": "C",
    "explanation": "When a managed database service doesn't support your specific database version, deploying on Compute Engine instances across multiple zones provides high availability. Automated backup scripts can handle the backup requirements.",
    "category": "Database",
    "difficulty": "hard",
    "tags": ["High Availability", "Database", "Compute Engine", "Backup"],
    "source": "part1"
  }
]